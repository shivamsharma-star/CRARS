<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rescue Agency Resource System</title>
    <link rel="stylesheet" href="styles-main.css">
    <link rel="stylesheet" href="profile.css">
<style>
   /* Basic Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Body Styling with Background GIF */
body {
    font-family: Arial, sans-serif;
    background: url('/images/8552773-hd_1920_1080_30fps\ \(1\).gif') no-repeat center center fixed;
    background-size: cover;
    color: white;
    /* overflow: hidden; */
}

.background-image {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('"D:\minor-project\login page video\login page video\8436364-uhd_3840_2160_30fps.mp4"'); /* Replace with actual background */
    background-size: cover;
    background-position: center;
    opacity: 0.6;
    z-index: -1;
}
/* Header Styling */
header {
    background-color: rgba(255, 69, 0, 0.8); /* Rescue-friendly orange with transparency */
    padding: 10;
    /* text-align: center; */
    font-size: 1.1em;
    /* font-weight: bold; */
    /* text-transform: uppercase; */
    /* letter-spacing: 2px; */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    /* position: fixed;
    width: 100%; */
    display: flex;
}
header img {
    width: 120px;
    height: 60px;
}

/* Main Container */
.main-container {
    display: flex;
    height: 100vh;
}

/* Google Map Section */
#mapdata {
    width: 50%;
    height: 100%;
    padding:2.5px;
}

#map {
    width: 100%;
    height: 100%;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

/* Right Side: Menu Grid Section */
.menu-grid {
    width: 50%;
    padding: 20px;
    padding: 5px;
    /* background-color: rgba(0, 0, 0, 0.26); */
    border-radius: 10px;
    /* box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3); */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    animation: fadeInRight 1s ease-out; /* Animation */
    /* background-color:  rgba(255, 69, 0, 0.6); */
}

/* Alert Section */
.alert-section {
    background-color: rgba(255, 69, 0, 0.6);
    padding: 15px;
    text-align: center;
    border-radius: 8px;
    margin-bottom: 20px;
    font-size: 1.2em;
    color: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}


.grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
    /* background-color: rgb(250, 18, 169); */
}
a{
    text-decoration: none;
}


.menu-item {
    background-color: rgba(32, 31, 31, 0.395);
    padding: 10px;
    text-align: center;
    border-radius: 12px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* height: 50px; */
    /* background-color: rgba(255, 69, 0, 0.6); */
}

.menu-item img {
    width: 50px;
    height: 50px;
    /* margin-bottom: 5px; */
    transition: transform 0.3s;
}

.menu-item:hover {
    transform: translateY(-10px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
}

.menu-item:hover img {
    transform: rotate(360deg); /* Icon rotation animation */
}

.menu-item p {
    font-size: 1.2em;
    color: white;
    margin-top: 10px;
}

/* Animations */
@keyframes fadeInRight {
    from {
        opacity: 0;
        transform: translateX(100%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

/* Responsive Design */
@media (max-width: 768px) {
    .main-container {
        flex-direction: column;
    }
    #mapdata, .menu-grid {
        width: 100%;
        height: 50vh;
    }
}

</style>
<style>
    
.profile-container {
    
   
    width: 100%;
    max-width: 500px;
    background-color: rgba(0, 0, 0, 0.416);
    padding: 20px;
    border-radius: 10px;
    /* box-shadow: 0 4px 8px rgba(249, 192, 2, 0.301); */
    margin-bottom: 5px;
}
.profile-container h1 {
    text-align: center;
    color: #ffffff;
    margin-bottom: 20px;
}
.profile-form input {
    width: 70%;
    padding: 12px;
    margin: 10px 0;
    border: 1px solid #ffffff53;
    border-radius: 5px;
    background: rgba(0, 0, 0, 0.148); /* Light translucent background */
    color: #ffffff;
    border-radius: 20.5px;
}
.profile-form input[readonly] {
    background-color: rgba(5, 0, 0, 0.518); /* Slightly darker for readonly fields */
    color: #15fd00;
}
.profile-form button {
    width: 100%;
    padding: 12px;
    background-color: #FF7000; /* Dark orange */
    color: #ffffff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    margin-top: 10px;
    transition: background 0.3s;
}
.profile-form button:hover {
   
    background-color: #0099ff; /* Lighter orange on hover */
}
.profile-form{
   
}
 @media (max-width: 600px) {
    .profile-container {
        padding: 15px;
    }
    .profile-form input, .profile-form button {
        padding: 10px;
    }
} 
</style>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" /> 
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script> 
</head>
<body>
  <div class="background-image"></div>
  
  <!-- Header -->
  <header>
    <img src="/images/final 1 with white edges.png" alt="Logo">
    <!-- <h4>Rescue Agency Resource System</h4> -->
  </header>

  <!-- Main Container -->
  <div class="main-container">
    
    <!-- Left Section: Google Map -->
    <div id="mapdata">
      <div id="map"></div>
    </div>
    
    <!-- Right Section: Menu Grid -->
    <div class="menu-grid">
      <div class="alert-section">  
        <h4>Welcome, <%= user.user_name %>!</h4>
      </div>
      
      <!-- Profile Section -->
       <center>
      <div class="profile-container">
        <h1>Profile</h1>
        
        <!-- User Profile Form with Conditional Read-Only Fields -->
        <form class="profile-form" action="/profile/update" method="POST">
         Name : <input type="text" id="name" name="name" value="<%= user.user_name %>" placeholder="Name" <%= isOwnProfile ? '' : 'readonly' %> required>
        <br> Email : <input type="email" id="email" name="email" value="<%= user.Email %>" placeholder="Email" readonly>
        <br>  Location :<input type="text" id="location" name="location" value="<%= user.location %>" placeholder="Location" <%= isOwnProfile ? '' : 'readonly' %> required>
         <br> latitude : <input type="text" id="latitude" name="latitude" value="<%= user.latitude %>" placeholder="Latitude" <%= isOwnProfile ? '' : 'readonly' %> required>
         <br> longitude : <input type="text" id="longitude" name="longitude" value="<%= user.longitude %>" placeholder="Longitude" <%= isOwnProfile ? '' : 'readonly' %> required>
          
          <% if (isOwnProfile) { %>
            <button type="button" onclick="getCurrentLocation()">Get Current Location</button>
            <button type="submit">Update Profile</button>
          <% } %>
        </form>
      </div>
    </center>
      <!-- Menu Items -->
      <!-- <div class="grid-container">
        <a href="/profile/<%= user.id %>">
          <div class="menu-item">
            <img src="https://cdn-icons-png.flaticon.com/512/8443/8443082.png" alt="Profile Icon">
            <p>Profile</p>
          </div>
        </a>
        <div class="menu-item">
          <img src="https://cdn-icons-png.flaticon.com/512/3900/3900756.png" alt="Resources Icon">
          <p>Resources</p>
        </div>
        <div class="menu-item">
          <img src="https://cdn-icons-png.freepik.com/512/4325/4325947.png" alt="Rescue Icon">
          <p>Rescue Agency</p>
        </div>
        <div class="menu-item">
          <img src="https://cdn-icons-png.flaticon.com/512/559/559384.png" alt="Alerts Icon">
          <p>Alerts</p>
        </div>
        <a href="/chat-list">
          <div class="menu-item">
            <img src="https://cdn.iconscout.com/icon/free/png-256/free-chat-icon-download-in-svg-png-gif-file-formats--message-communication-chatting-conversation-feedback-pack-business-icons-1794829.png?f=webp&w=256" alt="Chat Icon">
            <p>Live Chat</p>
          </div>
        </a>
        <a href="/about">
          <div class="menu-item">
            <img src="https://cdn-icons-png.flaticon.com/512/2716/2716054.png" alt="Account Upload Icon">
            <p>Account Upload</p>
          </div>
        </a>
      </div>
    </div>
     -->
  </div>

  <!-- Leaflet Map and Location Fetch Script -->
  <script>
    // Initialize the map and set its view to a default location with zoom level
    const map = L.map('map').setView([20.5937, 78.9629], 5); // Default to center of India

    // Add OpenStreetMap tiles
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 19,
      attribution: 'Â© OpenStreetMap'
    }).addTo(map);

    // User data
    const user = {
      name: "<%= user.user_name %>",
      location: "<%= user.location %>",
      latitude: <%= user.latitude %>,
      longitude: <%= user.longitude %>,
      profileLink: "/profile/<%= user.id %>"
    };

    // Custom icon for the marker
    const customIcon = L.icon({
      iconUrl: 'https://t2j6nqnq-3550.inc1.devtunnels.ms/images/21434441[1].png',
      iconSize: [22.5, 47.5],
      iconAnchor: [16, 32],
      popupAnchor: [0, -32]
    });

    // Add a marker to the map at the user's location
    const marker = L.marker([user.latitude, user.longitude], { icon: customIcon }).addTo(map);
    marker.bindPopup(`<b>${user.name}</b><br>${user.location}`).openPopup();

    // JavaScript function to get current location
    function getCurrentLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(async (position) => {
          const latitude = position.coords.latitude;
          const longitude = position.coords.longitude;

          // Set latitude and longitude fields
          document.getElementById('latitude').value = latitude;
          document.getElementById('longitude').value = longitude;

          // Reverse geocode to get location name from latitude and longitude
          const response = await fetch(`https://nominatim.openstreetmap.org/reverse?lat=${latitude}&lon=${longitude}&format=json`);
          const data = await response.json();
          const locationName = data.display_name;

          // Set location name field
          document.getElementById('location').value = locationName;
        }, (error) => {
          alert('Unable to retrieve your location. Please make sure location services are enabled.');
        });
      } else {
        alert('Geolocation is not supported by your browser.');
      }
    }
  </script>
</body>
</html>
